{"version":3,"sources":["api/books/books.model.js"],"names":["BooksSchema","Schema","ownerId","String","ownerName","title","authors","publishedDate","description","descriptionFull","categories","averageRating","Number","thumbnail","methods","findByUser","cb","model","find"],"mappings":"AAAA;;;;;;AAEA;;;;;;AAEA,IAAIA,cAAc,IAAI,mBAASC,MAAb,CAAoB;AACpCC,WAASC,MAD2B;AAEpCC,aAAWD,MAFyB;AAGpCE,SAAOF,MAH6B;AAIpCG,WAAS,EAJ2B;AAKpCC,iBAAeJ,MALqB;AAMpCK,eAAaL,MANuB;AAOpCM,mBAAiBN,MAPmB;AAQpCO,cAAY,EARwB;AASpCC,iBAAeC,MATqB;AAUpCC,aAAWV;AAVyB,CAApB,CAAlB;;AAaA;AACAH,YAAYc,OAAZ,CAAoBC,UAApB,GAAiC,UAASC,EAAT,EAAa;AAC5C,SAAO,KAAKC,KAAL,CAAW,OAAX,EAAoBC,IAApB,CAAyB,EAAEhB,SAAS,KAAKA,OAAhB,EAAzB,EAAoDc,EAApD,CAAP;AACD,CAFD;;kBAIe,mBAASC,KAAT,CAAe,OAAf,EAAwBjB,WAAxB,C","file":"books.model.js","sourcesContent":["'use strict';\n\nimport mongoose from 'mongoose';\n\nvar BooksSchema = new mongoose.Schema({\n  ownerId: String,\n  ownerName: String,\n  title: String,\n  authors: [],\n  publishedDate: String,\n  description: String,\n  descriptionFull: String,\n  categories: [],\n  averageRating: Number,\n  thumbnail: String\n});\n\n/* Search Books by ID of owner */\nBooksSchema.methods.findByUser = function(cb) {  \n  return this.model('Books').find({ ownerId: this.ownerId }, cb);\n};\n\nexport default mongoose.model('Books', BooksSchema);\n "]}